{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/src/Components/SWProfile/SWProfile.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100vw;\\n  height: 100vh;\\n  background: rgba(0, 0, 0, 0.3);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport UsersTopBar from \"../Users/TopBar/UsersTopBar.js\";\nimport styled from \"styled-components\";\n\nfunction SWProfile(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      worker = _useState2[0],\n      setWorker = _useState2[1];\n\n  useEffect(function () {\n    var singleWorker = props.serviceWorkers.filter(function (sw) {\n      return sw.id === parseInt(props.match.params.id);\n    });\n    setWorker.apply(void 0, _toConsumableArray(singleWorker));\n  }, []);\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(UsersTopBar, {\n    fullName: props.fullName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, worker.fullName));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    fullName: state.fullName,\n    serviceWorkers: state.serviceWorkers\n  };\n};\n\nexport default connect(mapStateToProps, {})(SWProfile);\nvar Wrapper = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/src/Components/SWProfile/SWProfile.js"],"names":["React","useState","useEffect","connect","UsersTopBar","styled","SWProfile","props","worker","setWorker","singleWorker","serviceWorkers","filter","sw","id","parseInt","match","params","fullName","mapStateToProps","state","Wrapper","div"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,kBACIN,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACjBO,MADiB;AAAA,MACTC,SADS;;AAGxBP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,YAAY,GAAGH,KAAK,CAACI,cAAN,CAAqBC,MAArB,CAA4B,UAAAC,EAAE,EAAI;AACrD,aAAOA,EAAE,CAACC,EAAH,KAAUC,QAAQ,CAACR,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBH,EAApB,CAAzB;AACD,KAFoB,CAArB;AAGAL,IAAAA,SAAS,MAAT,4BAAaC,YAAb;AACD,GALQ,EAKN,EALM,CAAT;AAOA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEH,KAAK,CAACW,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,MAAM,CAACU,QAAX,CAFF,CADF;AAMD;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLF,IAAAA,QAAQ,EAAEE,KAAK,CAACF,QADX;AAELP,IAAAA,cAAc,EAAES,KAAK,CAACT;AAFjB,GAAP;AAID,CALD;;AAOA,eAAeR,OAAO,CACpBgB,eADoB,EAEpB,EAFoB,CAAP,CAGbb,SAHa,CAAf;AAKA,IAAMe,OAAO,GAAGhB,MAAM,CAACiB,GAAV,mBAAb","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport UsersTopBar from \"../Users/TopBar/UsersTopBar.js\";\n\nimport styled from \"styled-components\";\n\nfunction SWProfile(props) {\n  const [worker, setWorker] = useState({});\n\n  useEffect(() => {\n    const singleWorker = props.serviceWorkers.filter(sw => {\n      return sw.id === parseInt(props.match.params.id);\n    });\n    setWorker(...singleWorker);\n  }, []);\n\n  return (\n    <Wrapper>\n      <UsersTopBar fullName={props.fullName} />\n      <p>{worker.fullName}</p>\n    </Wrapper>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    fullName: state.fullName,\n    serviceWorkers: state.serviceWorkers\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(SWProfile);\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.3);\n`;\n"]},"metadata":{},"sourceType":"module"}