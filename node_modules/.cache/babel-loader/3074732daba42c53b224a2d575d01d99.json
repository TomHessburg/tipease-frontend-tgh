{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/src/Components/Users/TipSW/TipSW.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 2;\\n  padding: 16px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"styled-components\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactStars from \"react-stars\";\nexport default function TipSW(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      amount = _useState2[0],\n      setAmmount = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rating = _useState4[0],\n      setRating = _useState4[1];\n\n  return React.createElement(TipWorkerWrapper, {\n    style: props.show ? {\n      display: \"flex\"\n    } : {\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"x\"), React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Tip \", props.worker.fullName), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"amount\"), React.createElement(TextField, {\n    id: \"filled-adornment-amount\",\n    type: \"number\",\n    value: amount,\n    onChange: function onChange(e) {\n      setAmmount(e.target.value);\n    },\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"$\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"rating\"), React.createElement(\"div\", {\n    style: {\n      margin: \"auto\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ReactStars, {\n    count: 5,\n    value: rating,\n    onChange: setRating,\n    size: 24,\n    color2: \"#EB3D17\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    onClick: function onClick(e) {\n      if (amount > 0) {\n        console.log(amount);\n      }\n\n      if (rating > 0) {\n        console.log(rating);\n      }\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"submit\"));\n}\nvar TipWorkerWrapper = styled(Paper)(_templateObject());","map":{"version":3,"sources":["/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/src/Components/Users/TipSW/TipSW.js"],"names":["React","useState","Paper","Typography","styled","TextField","InputAdornment","Button","ReactStars","TipSW","props","amount","setAmmount","rating","setRating","show","display","worker","fullName","e","target","value","startAdornment","margin","width","justifyContent","console","log","TipWorkerWrapper"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,kBACNT,QAAQ,CAAC,CAAD,CADF;AAAA;AAAA,MAC5BU,MAD4B;AAAA,MACpBC,UADoB;;AAAA,mBAEPX,QAAQ,CAAC,CAAD,CAFD;AAAA;AAAA,MAE5BY,MAF4B;AAAA,MAEpBC,SAFoB;;AAInC,SACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEJ,KAAK,CAACK,IAAN,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb,GAAmC;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACON,KAAK,CAACO,MAAN,CAAaC,QADpB,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EASE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,yBADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAEP,MAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAQ,CAAC,EAAI;AACbP,MAAAA,UAAU,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,KANH;AAOE,IAAA,UAAU,EAAE;AACVC,MAAAA,cAAc,EAAE,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADN,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAoBE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,EAuBE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLR,MAAAA,OAAO,EAAE,MAHJ;AAILS,MAAAA,cAAc,EAAE;AAJX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE,CADT;AAEE,IAAA,KAAK,EAAEZ,MAFT;AAGE,IAAA,QAAQ,EAAEC,SAHZ;AAIE,IAAA,IAAI,EAAE,EAJR;AAKE,IAAA,MAAM,EAAE,SALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAvBF,CAHF,EA2CE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,iBAAAK,CAAC,EAAI;AACZ,UAAIR,MAAM,GAAG,CAAb,EAAgB;AACde,QAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACD;;AACD,UAAIE,MAAM,GAAG,CAAb,EAAgB;AACda,QAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACD;AACF,KARH;AASE,IAAA,OAAO,EAAC,WATV;AAUE,IAAA,KAAK,EAAC,SAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CF,CADF;AA4DD;AAED,IAAMe,gBAAgB,GAAGxB,MAAM,CAACF,KAAD,CAAT,mBAAtB","sourcesContent":["import React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"styled-components\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\n\nimport ReactStars from \"react-stars\";\n\nexport default function TipSW(props) {\n  const [amount, setAmmount] = useState(0);\n  const [rating, setRating] = useState(0);\n\n  return (\n    <TipWorkerWrapper\n      style={props.show ? { display: \"flex\" } : { display: \"none\" }}\n    >\n      <div>\n        <button>x</button>\n        <Typography variant=\"h5\" gutterBottom>\n          Tip {props.worker.fullName}\n        </Typography>\n        <hr />\n        <Typography variant=\"h6\" gutterBottom>\n          amount\n        </Typography>\n        <TextField\n          id=\"filled-adornment-amount\"\n          type=\"number\"\n          value={amount}\n          onChange={e => {\n            setAmmount(e.target.value);\n          }}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\n          }}\n        />\n        <Typography variant=\"h6\" gutterBottom>\n          rating\n        </Typography>\n        <div\n          style={{\n            margin: \"auto\",\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\"\n          }}\n        >\n          <ReactStars\n            count={5}\n            value={rating}\n            onChange={setRating}\n            size={24}\n            color2={\"#EB3D17\"}\n          />\n        </div>\n      </div>\n      <Button\n        onClick={e => {\n          if (amount > 0) {\n            console.log(amount);\n          }\n          if (rating > 0) {\n            console.log(rating);\n          }\n        }}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        submit\n      </Button>\n    </TipWorkerWrapper>\n  );\n}\n\nconst TipWorkerWrapper = styled(Paper)`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  z-index: 2;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}