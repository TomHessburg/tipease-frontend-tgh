{"ast":null,"code":"import _slicedToArray from \"/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/src/Components/SWProfile/SWProfile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction SWProfile(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      worker = _useState2[0],\n      setWorker = _useState2[1];\n\n  useEffect(function () {\n    var singleWorker = props.serviceWorkers.filter(function (sw) {\n      return sw.id === parseInt(props.match.params.id);\n    });\n    console.log(singleWorker);\n    setWorker(singleWorker);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, worker.id));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    serviceWorkers: state.serviceWorkers\n  };\n};\n\nexport default connect(mapStateToProps, {})(SWProfile);","map":{"version":3,"sources":["/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/src/Components/SWProfile/SWProfile.js"],"names":["React","useState","useEffect","connect","SWProfile","props","worker","setWorker","singleWorker","serviceWorkers","filter","sw","id","parseInt","match","params","console","log","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,kBACIJ,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACjBK,MADiB;AAAA,MACTC,SADS;;AAGxBL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMM,YAAY,GAAGH,KAAK,CAACI,cAAN,CAAqBC,MAArB,CAA4B,UAAAC,EAAE,EAAI;AACrD,aAAOA,EAAE,CAACC,EAAH,KAAUC,QAAQ,CAACR,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBH,EAApB,CAAzB;AACD,KAFoB,CAArB;AAGAI,IAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACAD,IAAAA,SAAS,CAACC,YAAD,CAAT;AACD,GANQ,CAAT;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,MAAM,CAACM,EAAX,CADF,CADF;AAKD;;AAED,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLV,IAAAA,cAAc,EAAEU,KAAK,CAACV;AADjB,GAAP;AAGD,CAJD;;AAMA,eAAeN,OAAO,CACpBe,eADoB,EAEpB,EAFoB,CAAP,CAGbd,SAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction SWProfile(props) {\n  const [worker, setWorker] = useState({});\n\n  useEffect(() => {\n    const singleWorker = props.serviceWorkers.filter(sw => {\n      return sw.id === parseInt(props.match.params.id);\n    });\n    console.log(singleWorker);\n    setWorker(singleWorker);\n  });\n\n  return (\n    <div>\n      <p>{worker.id}</p>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    serviceWorkers: state.serviceWorkers\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(SWProfile);\n"]},"metadata":{},"sourceType":"module"}