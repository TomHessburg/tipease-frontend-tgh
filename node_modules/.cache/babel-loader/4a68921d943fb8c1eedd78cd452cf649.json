{"ast":null,"code":"import _objectSpread from \"/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/src/Components/ServiceWorkers/SWDashboard/SWDashboard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport moduleStyles from \"./SWDashboard.module.scss\";\nimport Grid from \"@material-ui/core/Grid\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n      margin: \"10px\"\n    }\n  };\n};\n\nfunction DashBoard(props) {\n  var classes = props.classes;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tips = _useState2[0],\n      setTips = _useState2[1];\n\n  useEffect(function () {\n    axios.get(\"https://buildtipease.herokuapp.com/tickets/tipHistory/\".concat(props.id)).then(function (res) {\n      return setTips(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Welcome, \", props.username, \"!\"), React.createElement(\"div\", {\n    className: moduleStyles.dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: moduleStyles.mainDashSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: moduleStyles.topDash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.photoUrl,\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Account Balance: $\", props.accountBalance)), React.createElement(\"div\", {\n    className: moduleStyles.bio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.bio)), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    style: {\n      minHeight: \"230px\"\n    },\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Ratings and Bank Stats\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"rating: \", props.rating), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"# of ratings: \", props.numOfRatings), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"accout balance: $\", props.accountBalance))), React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    style: {\n      minHeight: \"230px\"\n    },\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Account Details\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"full name: \", props.fullName), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"time at job: \", props.timeAtJob), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"service: \", props.serviceType), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"workplace: \", props.workplace), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"tagline: \", props.tagline))), React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 12,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: moduleStyles.tips,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    style: {\n      maxHeight: \"230px\",\n      overflowY: \"scroll\"\n    },\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Tip History\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), tips.map(function (tip) {\n    return React.createElement(\"div\", {\n      key: tip.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, tip.senderUsername ? tip.senderUsername : \"no name supplied\"), React.createElement(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"amount: $\", tip.tipAmount), React.createElement(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"date: \", tip.dateRecieved.substring(0, 10)), tip.senderUsername !== \"not supplied\" ? React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }) : null, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  })))))))));\n}\n\nDashBoard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var refactoredACB = \"\".concat(state.accountBalance);\n\n  var _refactoredACB$split = refactoredACB.split(\".\"),\n      _refactoredACB$split2 = _slicedToArray(_refactoredACB$split, 2),\n      one = _refactoredACB$split2[0],\n      two = _refactoredACB$split2[1];\n\n  var answerPiece = one.split(\"\").reverse().map(function (num, i) {\n    var num2 = i + 1;\n\n    if (num2 % 3 === 0) {\n      return \",\" + num;\n    } else {\n      return num;\n    }\n  }).reverse().join(\"\");\n\n  if (two) {\n    answerPiece += \".\" + two;\n\n    if (\"\".concat(two).length === 1) {\n      answerPiece += \"0\";\n    }\n  }\n\n  return _objectSpread({}, state, {\n    accountBalance: answerPiece\n  });\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(DashBoard));","map":{"version":3,"sources":["/Users/tomhessburg/Desktop/lambda/tipease-frontend-tgh/tipease/src/Components/ServiceWorkers/SWDashboard/SWDashboard.js"],"names":["React","useEffect","useState","axios","PropTypes","connect","withStyles","Paper","Typography","moduleStyles","Grid","styles","theme","root","flexGrow","paper","padding","spacing","unit","textAlign","color","palette","text","secondary","margin","DashBoard","props","classes","tips","setTips","get","id","then","res","data","catch","err","console","log","username","dashboard","mainDashSection","topDash","photoUrl","accountBalance","bio","minHeight","rating","numOfRatings","fullName","timeAtJob","serviceType","workplace","tagline","maxHeight","overflowY","map","tip","senderUsername","tipAmount","dateRecieved","substring","display","alignItems","justifyContent","propTypes","object","isRequired","mapStateToProps","state","refactoredACB","split","one","two","answerPiece","reverse","num","i","num2","join","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport moduleStyles from \"./SWDashboard.module.scss\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    margin: \"10px\"\n  }\n});\n\nfunction DashBoard(props) {\n  const { classes } = props;\n\n  const [tips, setTips] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`https://buildtipease.herokuapp.com/tickets/tipHistory/${props.id}`)\n      .then(res => setTips(res.data))\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Typography variant=\"h4\" gutterBottom>\n          Welcome, {props.username}!\n        </Typography>\n        <div className={moduleStyles.dashboard}>\n          <div className={moduleStyles.mainDashSection}>\n            <div className={moduleStyles.topDash}>\n              <img src={props.photoUrl} alt=\"profile\" />\n              <Typography variant=\"h5\" gutterBottom>\n                Account Balance: ${props.accountBalance}\n              </Typography>\n            </div>\n            <div className={moduleStyles.bio}>\n              <Typography variant=\"body1\" gutterBottom>\n                {props.bio}\n              </Typography>\n            </div>\n            <hr />\n            <Grid container spacing={0}>\n              <Grid item lg={4} sm={6} xs={12}>\n                <Paper style={{ minHeight: \"230px\" }} className={classes.paper}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Ratings and Bank Stats\n                  </Typography>\n                  <hr />\n                  <Typography variant=\"body1\" gutterBottom>\n                    rating: {props.rating}\n                  </Typography>\n                  <Typography variant=\"body1\" gutterBottom>\n                    # of ratings: {props.numOfRatings}\n                  </Typography>\n                  <Typography variant=\"body1\" gutterBottom>\n                    accout balance: ${props.accountBalance}\n                  </Typography>\n                </Paper>\n              </Grid>\n              <Grid item lg={4} sm={6} xs={12}>\n                <Paper style={{ minHeight: \"230px\" }} className={classes.paper}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Account Details\n                  </Typography>\n                  <hr />\n                  <Typography variant=\"body1\" gutterBottom>\n                    full name: {props.fullName}\n                  </Typography>\n                  <Typography variant=\"body1\" gutterBottom>\n                    time at job: {props.timeAtJob}\n                  </Typography>\n                  <Typography variant=\"body1\" gutterBottom>\n                    service: {props.serviceType}\n                  </Typography>\n                  <Typography variant=\"body1\" gutterBottom>\n                    workplace: {props.workplace}\n                  </Typography>\n                  <Typography variant=\"body1\" gutterBottom>\n                    tagline: {props.tagline}\n                  </Typography>\n                </Paper>\n              </Grid>\n              <Grid item lg={4} sm={12} xs={12}>\n                <div className={moduleStyles.tips}>\n                  <Paper\n                    style={{ maxHeight: \"230px\", overflowY: \"scroll\" }}\n                    className={classes.paper}\n                  >\n                    <Typography variant=\"h6\" gutterBottom>\n                      Tip History\n                    </Typography>\n                    <hr />\n                    {tips.map(tip => {\n                      return (\n                        <div key={tip.id}>\n                          <Typography variant=\"h6\" gutterBottom>\n                            {tip.senderUsername\n                              ? tip.senderUsername\n                              : \"no name supplied\"}\n                          </Typography>\n                          <Typography variant=\"body1\" gutterBottom>\n                            amount: ${tip.tipAmount}\n                          </Typography>\n                          <Typography variant=\"body1\" gutterBottom>\n                            date: {tip.dateRecieved.substring(0, 10)}\n                          </Typography>\n                          {tip.senderUsername !== \"not supplied\" ? (\n                            <div\n                              style={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\"\n                              }}\n                            />\n                          ) : null}\n\n                          <hr />\n                        </div>\n                      );\n                    })}\n                  </Paper>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nDashBoard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  const refactoredACB = `${state.accountBalance}`;\n  const [one, two] = refactoredACB.split(\".\");\n  let answerPiece = one\n    .split(\"\")\n    .reverse()\n    .map((num, i) => {\n      let num2 = i + 1;\n      if (num2 % 3 === 0) {\n        return \",\" + num;\n      } else {\n        return num;\n      }\n    })\n    .reverse()\n    .join(\"\");\n\n  if (two) {\n    answerPiece += \".\" + two;\n    if (`${two}`.length === 1) {\n      answerPiece += \"0\";\n    }\n  }\n  return {\n    ...state,\n    accountBalance: answerPiece\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(DashBoard));\n"]},"metadata":{},"sourceType":"module"}